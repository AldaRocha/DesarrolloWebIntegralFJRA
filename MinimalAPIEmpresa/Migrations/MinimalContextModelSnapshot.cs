// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalAPIEmpresa;

#nullable disable

namespace MinimalAPIEmpresa.Migrations
{
    [DbContext(typeof(MinimalContext))]
    partial class MinimalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MinimalAPIEmpresa.Models.Ciudad", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CiudadId");

                    b.ToTable("Ciudad");

                    b.HasData(
                        new
                        {
                            CiudadId = 1,
                            Nombre = "CDMX"
                        },
                        new
                        {
                            CiudadId = 2,
                            Nombre = "Guadalajara"
                        },
                        new
                        {
                            CiudadId = 3,
                            Nombre = "Monterrey"
                        });
                });

            modelBuilder.Entity("MinimalAPIEmpresa.Models.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("MinimalAPIEmpresa.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoId"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Sueldo")
                        .HasColumnType("float");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("CiudadId");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("MinimalAPIEmpresa.Models.EmpleadoDepartamento", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoId", "DepartamentoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("EmpleadoDepartamento");
                });

            modelBuilder.Entity("MinimalAPIEmpresa.Models.Empleado", b =>
                {
                    b.HasOne("MinimalAPIEmpresa.Models.Ciudad", "Ciudad")
                        .WithMany("Empleados")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("MinimalAPIEmpresa.Models.EmpleadoDepartamento", b =>
                {
                    b.HasOne("MinimalAPIEmpresa.Models.Departamento", "Departamento")
                        .WithMany("EmpleadoDepartamentos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinimalAPIEmpresa.Models.Empleado", "Empleado")
                        .WithMany("EmpleadoDepartamentos")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("MinimalAPIEmpresa.Models.Ciudad", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("MinimalAPIEmpresa.Models.Departamento", b =>
                {
                    b.Navigation("EmpleadoDepartamentos");
                });

            modelBuilder.Entity("MinimalAPIEmpresa.Models.Empleado", b =>
                {
                    b.Navigation("EmpleadoDepartamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
